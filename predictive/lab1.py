# -*- coding: utf-8 -*-
"""lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wLf5RyJZD8o0cb4jkeP9Yh_wIdP8k9Nb
"""

#1
import pandas as pd
from sklearn.linear_model import LinearRegression
import numpy as np
import warnings as wr
from sklearn.preprocessing import LabelEncoder
wr.filterwarnings('ignore')
data=pd.read_csv("/content/expenses.csv")
df=pd.DataFrame(data)
print(df)
#detecting the null values
df.isnull().sum()
#Identifying the outliers
Q1=df.quantile(0.25)
Q3=df.quantile(0.75)
IQR=Q3-Q1
outliers=((df<(Q1-1.5*IQR))|(df>(Q3+1.5*IQR))).sum()
print(outliers)
#encoding the categorical columns
encoder=LabelEncoder()
#(df["sex","smoker","region"])=encoder.fit_transform(df["sex","smoker","region"])
encoded_data = encoder.fit_transform(df[['sex','smoker','region']])
encoded_df = pd.DataFrame(encoded_data.toarray(), columns=encoder.get_feature_names_out(['sex','smoker','region']))
print(encoded_df)

#3
df.corr()
#correlations found
df.drop_duplicates()
#duplicate values were dropped
df.nunique()
x=df.iloc[:,:-1]
y=df.iloc[:,-1:]
#4 splitting

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.2)
print(y_test)

#Training the model
clf=LinearRegression()
clf=clf.fit(x_train,y_train)
pred=clf.predict(x_test)
print(pred)

#Evaluation Metrics
from sklearn.metrics import accuracy_score
from sklearn.metrics import mean_squared_error
import math
clf_acc = accuracy_score(pred,y_test)
clf_MSE=mean_squared_error(pred,y_test)
clf_RMSE=(clf_MSE).sqrt()

